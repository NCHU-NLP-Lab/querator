{"version":3,"sources":["util/i18n.js","util/reducer.js","util/config.js","util/toast.js","util/api.js","util/action.js","component/Footer/index.jsx","component/ModeNavBar.jsx","component/SettingModal.jsx","module/Button/Generate.jsx","module/Input/Context.jsx","module/Question/display.jsx","module/Input/Answer.jsx","module/Input/Question.jsx","module/QuestionAnswerPair.jsx","component/Export.jsx","component/TutorialModal.jsx","page/DistractorAI/tutorial.jsx","img/distractor-tutorial/step1.gif","img/distractor-tutorial/step2.gif","page/DistractorAI/index.jsx","component/PickAnswer/index.jsx","component/QuestionGenerator/index.jsx","page/QueratorAI/tutorial.jsx","img/querator-tutorial/step1.gif","img/querator-tutorial/step2.gif","img/querator-tutorial/step3.gif","page/QueratorAI/index.jsx","page/QueratorGroupAI/tutorial.jsx","img/group-tutorial/step1.gif","img/group-tutorial/step2.gif","img/group-tutorial/step3.gif","page/QueratorGroupAI/index.jsx","App.jsx","serviceWorker.js","index.jsx"],"names":["langOptions","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","caches","excludeCacheFor","cookieMinutes","cookieDomain","htmlTag","document","documentElement","i18n","use","initReactI18next","init","detection","resources","langData","lng","fallbackLng","keySeparator","interpolation","escapeValue","defaultState","selectWords","selectWordsRaw","selectWordsSubmitting","showSetting","language","pickAnsRaw","fullContext","submitTotal","showTextSlider","process","REACT_APP_API","CONFIG","API_ENDPOINT","showToastInfo","msg","type","toast","info","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","warn","error","DEFAULT_HEADERS","Headers","_handleError","console","toString","_normalizePromises","promises","a","Promise","all","data","exportQAPairs","format","fetch","method","body","JSON","stringify","headers","then","response","filename","get","split","slice","blob","createElement","download","href","window","URL","createObjectURL","click","catch","questionGenerate","sets","requests","map","set","answer","tag","start_at","end_at","article","context","json","questionGroupGenerate","questionGroupSize","candidatePoolSize","request","question_group_size","candidate_pool_size","questionGroupDistractorGenerate","questionAndAnswers","question_and_answers","distractorGenerate","answerStart","answerEnd","question","quantity","gen_quantity","show","settingLanguage","localStorage","setItem","Footer","props","className","rel","target","ModeNavbar","dispatch","useDispatch","Navbar","bg","Container","Nav","routes","route","index","name","Link","as","to","path","onClick","SettingModal","useTranslation","t","showSettingModal","useSelector","state","changeLang","lang","changeLanguage","Modal","onHide","Header","closeButton","Title","Body","Button","variant","clear","location","reload","GenerateButton","disabled","Spinner","animation","size","role","ContextInput","context_length","length","Form","Group","Label","htmlFor","id","label","Control","rows","value","placeholder","onChange","helpText","Text","muted","textCount","QuestionDisplay","Card","preTitle","Boolean","titleCheckboxOnChange","Check","title","checked","titleChecked","ListGroup","listings","item","Item","inputBeginAddOn","inputEndAddOn","InputGroup","text","FloatingLabel","inputLabel","checkType","textBold","isChecked","onCheck","readOnly","nestedList","horizontal","nestedItem","nestedIndex","AnswerInput","answerChange","QuestionInput","questionChange","QuestionAnswerPair","Question","pairIndex","pair","Answer","ExportButtons","download_export","event","preventDefault","getQuestionSets","Array","isArray","log","ButtonGroup","TutorialModal","useState","setIndex","content","centered","Carousel","activeIndex","controls","indicators","onSelect","selectedIndex","e","contentIndex","src","image","alt","DistractorAI","question_pairs","options","questionSets","setQuestionSets","generated","setGenerated","generating","setGenerating","exportChecks","setExportChecks","showTutorialModal","toggleQuestionExportFuncGenerator","newExportChecks","fill","getDistractors","questionSet","result","distractors","emptyPair_","createSet","newSets","push","Row","Col","xs","Context","contextChange","splice","deletePair","createPair","deleteSet","Generate","pairChecks","QDoption","forEach","option","optionIndex","Export","datas","is_answer","tutorial","PickAnswer","isEdit","inputContext","addWords","bind","triggerQG","self","this","navigator","clipboard","readText","setState","err","replace","getSelection","empty","removeAllRanges","selection","selectWord","start","anchorOffset","end","focusOffset","tmp","contextForQG","padding","parseInt","contextLimit","isWordRepeat","word","tag_padding","cleanSelection","filter","q","results","questions","submitQs","oneClickDisable","appState","onMouseUp","confirmContext","setTimeout","onDoubleClick","ref","pickedBlock","k","removeSelect","Component","compose","connect","withTranslation","QuestionGenerator","generateDistractor","questionIndex","distractorGenerating","newDistractors","generateDataForExport","pairs","questionsChecked","concat","distractor","toogleExport","toggleEditingQuestion","newEditingQuestion","editingQuestion","readEditingQuestion","apiError","QDlisting","editing","Checkbox","hightlightedContext","some","questionCheck","isMobile","check","userAgent","vendor","opera","test","substr","QueratorAI","useEffect","EXAMPLE_CONTEXTS","QueratorGroupAI","array","settingOpen","setSettingOpen","questionNum","setQuestionNum","Math","floor","random","setContext","disableGenBtn","setDisableGenBtn","setQuestions","answers","setAnswers","setOptions","genQuestionGroup","question_group","genOptions","allAnsIsNull","i","alert","question_answer_and_options","qa","undefined","d","newOptionValue","qac","Collapse","in","column","QDoptions","questionChecks","newAnswers","exportOptions","element","App","mounted","useRef","current","i18nextLng","getItem","ModeNavBar","newestOnTop","rtl","pauseOnVisibilityChange","hostname","match","store","createStore","action","Object","assign","softDel","applyMiddleware","thunk","logger","ReactDOM","render","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.90f53739.chunk.js","sourcesContent":["import i18n from \"i18next\";\n// import LanguageDetector from 'i18next-browser-languagedetector';\nimport langData from \"langdata.json\";\nimport { initReactI18next } from \"react-i18next\";\n\nlet langOptions = {\n  // order and from where user language should be detected\n  order: [\n    \"querystring\",\n    \"cookie\",\n    \"localStorage\",\n    \"navigator\",\n    \"htmlTag\",\n    \"path\",\n    \"subdomain\",\n  ],\n\n  // keys or params to lookup language from\n  lookupQuerystring: \"lng\",\n  lookupCookie: \"i18next\",\n  lookupLocalStorage: \"i18nextLng\",\n  lookupFromPathIndex: 0,\n  lookupFromSubdomainIndex: 0,\n\n  // cache user language on\n  caches: [\"localStorage\", \"cookie\"],\n  excludeCacheFor: [\"cimode\"], // languages to not persist (cookie, localStorage)\n\n  // optional expire and domain for set cookie\n  cookieMinutes: 10,\n  cookieDomain: \"myDomain\",\n\n  // optional htmlTag with lang attribute, the default is:\n  htmlTag: document.documentElement,\n};\n\ni18n\n  .use(initReactI18next) // passes i18n down to react-i18next\n  // .use(LanguageDetector)\n  .init({\n    detection: langOptions,\n    resources: langData,\n    lng: \"en-US\",\n    fallbackLng: \"en-US\",\n    keySeparator: false, // we do not use keys in form messages.welcome\n    interpolation: {\n      escapeValue: false, // react already safes from xss\n    },\n  });\n\nexport default i18n;\n","let defaultState = {\n  selectWords: [],\n  selectWordsRaw: [],\n  selectWordsSubmitting: false,\n  showSetting: false,\n  language: \"en-US\",\n  pickAnsRaw: [],\n  fullContext: \"\",\n  submitTotal: 0,\n  showTextSlider: false,\n};\n\nexport default (state = defaultState, action) => {\n  console.log(action);\n  switch (action.type) {\n    case \"TEMP_RESET_GENERATED_CONTENT\":\n      return {\n        ...state,\n        selectWords: [],\n        selectWordsRaw: [],\n        selectWordsSubmitting: false,\n        pickAnsRaw: [],\n        fullContext: \"\",\n        submitTotal: 0,\n      };\n\n    case \"SHOW_TEXT_SLIDER\":\n      return { ...state, showTextSlider: action.show };\n\n    case \"SETTING_LANGUAGE\":\n      return {\n        ...state,\n        language: action.language ? action.language : state.language,\n      };\n\n    case \"SUBMIT_START\":\n      return Object.assign({}, state, {\n        selectWordsSubmitting: true,\n        fullContext: action.fullContext,\n        submitTotal: action.submitTotal,\n      });\n\n    case \"SUBMIT_QUESTIONS\":\n      action.questions = action.questions.map((q) => {\n        return Object.assign({}, q, {\n          softDel: false,\n        });\n      });\n      return Object.assign({}, state, {\n        selectWordsSubmitting: false,\n        selectWords: action.questions,\n        selectWordsRaw: [...action.questions],\n        pickAnsRaw: action.pickAnsRaw,\n      });\n\n    case \"SUBMIT_QUESTIONS_FAIL\":\n      return Object.assign({}, state, {\n        selectWordsSubmitting: false,\n        selectWords: action.questions,\n      });\n\n    case \"UPDATE_QUESTION\":\n      return Object.assign({}, state, {\n        selectWords: action.questions,\n      });\n\n    case \"APP_SHOW_SETTING\":\n      let { show } = action;\n      return Object.assign({}, state, {\n        showSetting: show,\n      });\n\n    default:\n      return state;\n  }\n};\n","const { REACT_APP_API: API_ENDPOINT = \"https://api.nlpnchu.org\" } = process.env;\n\nconst CONFIG = { API_ENDPOINT };\n\nexport default CONFIG;\n","import { toast } from \"react-toastify\";\n\nexport const showToastInfo = (msg, type = \"info\") => {\n  if (type === \"info\") {\n    toast.info(msg, {\n      position: \"bottom-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n  } else if (type === \"warn\") {\n    toast.warn(msg, {\n      position: \"bottom-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n      draggable: true,\n    });\n  } else if (type === \"error\") {\n    toast.error(msg, {\n      position: \"bottom-center\",\n      autoClose: 2000,\n      hideProgressBar: true,\n      closeOnClick: true,\n      pauseOnHover: true,\n    });\n  }\n};\n","import CONFIG from \"util/config\";\nimport { showToastInfo } from \"util/toast\";\n\nconst DEFAULT_HEADERS = new Headers({\n  \"Content-Type\": \"application/json; charset=UTF-8\",\n});\n\nconst _handleError = (error) => {\n  console.error(error);\n  showToastInfo(error.toString(), \"error\");\n};\n\nconst _normalizePromises = async (promises) => {\n  try {\n    const data = await Promise.all(promises);\n    return [data, null];\n  } catch (error) {\n    _handleError(error);\n    return [null, error];\n  }\n};\n\nexport const exportQAPairs = async (data, format) => {\n  fetch(`${CONFIG.API_ENDPOINT}/export-qa-pairs/${format}`, {\n    method: \"POST\",\n    body: JSON.stringify(data),\n    headers: DEFAULT_HEADERS,\n  })\n    .then((response) => {\n      const filename = response.headers\n        .get(\"Content-Disposition\")\n        .split(\"filename=\")[1]\n        .slice(1, -1);\n      response.blob().then((blob) => {\n        const a = document.createElement(\"a\");\n        a.download = filename;\n        a.href = window.URL.createObjectURL(blob);\n        a.click();\n      });\n    })\n    .catch(_handleError);\n};\n\nexport const questionGenerate = async (sets, language = \"en-US\") => {\n  let requests = sets.map(async (set) => {\n    return fetch(`${CONFIG.API_ENDPOINT}/${language}/generate-question`, {\n      method: \"POST\",\n      body: JSON.stringify({\n        answer: {\n          tag: set.tag,\n          start_at: set.start_at,\n          end_at: set.end_at,\n        },\n        article: set.context,\n      }),\n      headers: DEFAULT_HEADERS,\n    }).then((response) => response.json());\n  });\n\n  // Wait for all requests to complete\n  return await _normalizePromises(requests);\n};\n\nexport const questionGroupGenerate = async (\n  context,\n  questionGroupSize,\n  candidatePoolSize,\n  language = \"en-US\"\n) => {\n  let request = fetch(\n    `${CONFIG.API_ENDPOINT}/${language}/generate-question-group`,\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        context,\n        question_group_size: questionGroupSize,\n        candidate_pool_size: candidatePoolSize,\n      }),\n      headers: DEFAULT_HEADERS,\n    }\n  ).then((response) => response.json());\n\n  // Wait for all requests to complete\n  return (await _normalizePromises([request]))[0];\n};\n\nexport const questionGroupDistractorGenerate = async (\n  context,\n  questionAndAnswers,\n  language = \"en-US\"\n) => {\n  let request = fetch(\n    `${CONFIG.API_ENDPOINT}/${language}/generate-group-distractor`,\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        context,\n        question_and_answers: questionAndAnswers,\n      }),\n      headers: DEFAULT_HEADERS,\n    }\n  ).then((response) => response.json());\n\n  // Wait for all requests to complete\n  return (await _normalizePromises([request]))[0];\n};\n\nexport const distractorGenerate = async (\n  context,\n  answer,\n  answerStart,\n  answerEnd,\n  question,\n  quantity,\n  language = \"en-US\"\n) => {\n  let request = fetch(\n    `${CONFIG.API_ENDPOINT}/${language}/generate-distractor`,\n    {\n      method: \"POST\",\n      body: JSON.stringify({\n        article: context,\n        answer: {\n          tag: answer,\n          start_at: answerStart,\n          end_at: answerEnd,\n        },\n        question,\n        gen_quantity: quantity,\n      }),\n      headers: DEFAULT_HEADERS,\n    }\n  ).then((response) => response.json());\n\n  // Wait for all requests to complete\n  return (await _normalizePromises([request]))[0];\n};\n","import { questionGenerate } from \"util/api\";\n\nexport const resetGeneratedContent = () => {\n  return {\n    type: \"TEMP_RESET_GENERATED_CONTENT\",\n  };\n};\n\nexport const showTextSlider = (show) => {\n  return {\n    type: \"SHOW_TEXT_SLIDER\",\n    show,\n  };\n};\n\nexport const settingLanguage = (language = \"NULL\") => {\n  window.localStorage.setItem(\"i18nextLng\", language);\n  return {\n    type: \"SETTING_LANGUAGE\",\n    language,\n  };\n};\n\nexport const submitQs = (q, fullContext, language = \"zh-TW\") => {\n  return async (dispatch) => {\n    dispatch({\n      type: \"SUBMIT_START\",\n      fullContext,\n      submitTotal: q.length,\n    });\n\n    const [results, error] = await questionGenerate(q, language);\n    if (!error) {\n      dispatch({\n        type: \"SUBMIT_QUESTIONS\",\n        questions: results,\n        pickAnsRaw: q,\n      });\n    }\n  };\n};\n\nexport const updateQuestion = (alreadyUpdateQuestions) => {\n  return {\n    type: \"UPDATE_QUESTION\",\n    questions: alreadyUpdateQuestions,\n  };\n};\n\nexport const showSetting = (show) => {\n  return {\n    type: \"APP_SHOW_SETTING\",\n    show,\n  };\n};\n","import \"./index.scss\";\n\nimport React from \"react\";\n\nfunction Footer(props) {\n  return (\n    <footer className=\"footer mt-auto py-3 text-center text-muted\">\n      <h3>\n        <a\n          rel=\"noopener noreferrer\"\n          target=\"_blank\"\n          href=\"https://nlpnchu.org/querator\"\n          className=\"brand\"\n        >\n          Querator AI\n        </a>\n      </h3>\n      <p>\n        Copyright © 2021 <a href=\"https://nlpnchu.org\">NCHU NLP Lab</a>. All\n        rights reserved.\n      </p>\n    </footer>\n  );\n}\n\nexport default Footer;\n","import { showSetting, showTextSlider } from \"util/action\";\n\nimport React from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport Nav from \"react-bootstrap/Nav\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport { BsGear, BsQuestionCircleFill } from \"react-icons/bs\";\nimport { useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\n\nfunction ModeNavbar(props) {\n  const dispatch = useDispatch();\n\n  return (\n    <Navbar bg=\"light\">\n      <Container>\n        <Nav className=\"mx-auto\">\n          {props.routes.map((route, index) => {\n            return (\n              route.name && (\n                <Nav.Link key={index} as={Link} to={route.path}>\n                  {route.name}\n                </Nav.Link>\n              )\n            );\n          })}\n          <Nav.Link onClick={() => dispatch(showSetting(true))}>\n            <BsGear />\n          </Nav.Link>\n          <Nav.Link onClick={() => dispatch(showTextSlider(true))}>\n            <BsQuestionCircleFill />\n          </Nav.Link>\n        </Nav>\n      </Container>\n    </Navbar>\n  );\n}\n\nexport default ModeNavbar;\n","import { settingLanguage, showSetting } from \"util/action\";\n\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useTranslation } from \"react-i18next\";\nimport { MdClose } from \"react-icons/md\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nfunction SettingModal(props) {\n  const { t, i18n } = useTranslation();\n  const showSettingModal = useSelector((state) => state.showSetting);\n  const language = useSelector((state) => state.language);\n  const dispatch = useDispatch();\n\n  const changeLang = (lang) => {\n    i18n.changeLanguage(lang);\n    dispatch(settingLanguage(lang));\n  };\n\n  return (\n    <Modal show={showSettingModal} onHide={() => dispatch(showSetting(false))}>\n      <Modal.Header closeButton>\n        <Modal.Title>{t(\"setting\")}</Modal.Title>\n      </Modal.Header>\n      <Modal.Body>\n        <Modal.Title>\n          {t(\"UI lang\")} :<b> {language}</b>\n        </Modal.Title>\n        <p>{t(\"Select UI lang\")}</p>\n        <Button\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={() => changeLang(\"zh-TW\")}\n        >\n          繁體中文\n        </Button>\n        <Button\n          variant=\"primary\"\n          className=\"mx-2\"\n          onClick={() => changeLang(\"en-US\")}\n        >\n          English\n        </Button>\n        <hr />\n        <Modal.Title>{t(\"Clear data and sign out\")}</Modal.Title>\n        <p>{t(\"Clear data and sign out\")}</p>\n        <Button\n          variant=\"danger\"\n          onClick={() => {\n            window.localStorage.clear();\n            window.location.reload();\n          }}\n        >\n          {t(\"Confirm\")}\n        </Button>\n      </Modal.Body>\n      <Modal.Footer>\n        <Button\n          variant=\"secondary\"\n          onClick={() => dispatch(showSetting(false))}\n        >\n          Close <MdClose />\n        </Button>\n      </Modal.Footer>\n    </Modal>\n  );\n}\n\nexport default SettingModal;\n","import React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Spinner from \"react-bootstrap/Spinner\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction GenerateButton(props) {\n  const { t } = useTranslation();\n\n  return (\n    <Button\n      variant={props.variant || \"primary\"}\n      disabled={props.disabled}\n      onClick={props.onClick}\n    >\n      {props.disabled ? (\n        <>\n          {t(\"Generating\")}\n          <Spinner\n            as=\"span\"\n            animation=\"border\"\n            size=\"sm\"\n            role=\"status\"\n            aria-hidden=\"true\"\n          />\n        </>\n      ) : (\n        t(\"Generate\")\n      )}\n    </Button>\n  );\n}\n\nexport default GenerateButton;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction ContextInput(props) {\n  const { t } = useTranslation();\n\n  const context_length = props.context.split(\" \").length;\n\n  return (\n    <Form.Group className=\"context-inputs mb-3\">\n      <Form.Label htmlFor={`context-input-${props.id}`}>\n        {props.label ? props.label : t(\"Context\")}\n      </Form.Label>\n      <Form.Control\n        as=\"textarea\"\n        id={`context-input-${props.id}`}\n        rows=\"10\"\n        value={props.context}\n        placeholder=\"Input context/paragraph here\"\n        onChange={props.onChange}\n        disabled={props.disabled}\n      />\n      {props.helpText && <Form.Text muted>{props.helpText}</Form.Text>}\n      <br />\n      {props.textCount &&\n        (context_length >= 512 ? (\n          <Form.Text className=\"text-danger fw-bolder\">\n            {context_length} / 512\n          </Form.Text>\n        ) : (\n          <Form.Text muted>{context_length} / 512</Form.Text>\n        ))}\n    </Form.Group>\n  );\n}\n\nexport default ContextInput;\n","import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport FloatingLabel from \"react-bootstrap/FloatingLabel\";\nimport Form from \"react-bootstrap/Form\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\n\nfunction QuestionDisplay(props) {\n  return (\n    <Card className=\"mb-3\">\n      <Card.Header>\n        {props.preTitle && <Card.Text>{props.preTitle}</Card.Text>}\n        {Boolean(props.titleCheckboxOnChange) ? (\n          <Card.Title className=\"font-weight-bold\">\n            <Form.Check\n              type=\"checkbox\"\n              label={props.title}\n              checked={props.titleChecked}\n              onChange={props.titleCheckboxOnChange}\n            />\n          </Card.Title>\n        ) : (\n          <Card.Title className=\"font-weight-bold\">{props.title}</Card.Title>\n        )}\n      </Card.Header>\n      <ListGroup variant=\"flush\">\n        {props.listings.map((item, index) => {\n          return (\n            <ListGroup.Item key={`${props.id}-list-${index}`}>\n              {/* Type: Input */}\n              {item.type === \"input\" &&\n                (item.inputBeginAddOn || item.inputEndAddOn ? (\n                  // Standard input with buttons\n                  <InputGroup>\n                    {item.inputBeginAddOn}\n                    <Form.Control\n                      type=\"text\"\n                      value={item.text}\n                      disabled={item.disabled}\n                      onChange={item.onChange}\n                    />\n                    {item.inputEndAddOn}\n                  </InputGroup>\n                ) : (\n                  // Floating input with label\n                  <FloatingLabel label={item.inputLabel}>\n                    <Form.Control\n                      type=\"text\"\n                      value={item.text}\n                      disabled={item.disabled}\n                      onChange={item.onChange}\n                    />\n                  </FloatingLabel>\n                ))}\n              {/* Type: Checkbox / Radio */}\n              {item.type === \"check\" && (\n                <Form.Check\n                  type={item.checkType}\n                  label={item.textBold ? <b>{item.text}</b> : item.text}\n                  checked={item.isChecked}\n                  disabled={item.disabled}\n                  onChange={item.onCheck}\n                  readOnly={!Boolean(item.onCheck)}\n                />\n              )}\n              {/* Nested Item */}\n              {item.nestedList && Boolean(item.nestedList.length) && (\n                <ListGroup horizontal className=\"mt-3\">\n                  {item.nestedList.map((nestedItem, nestedIndex) => (\n                    <ListGroup.Item\n                      key={`${props.id}-list-${index}-${nestedIndex}`}\n                    >\n                      {nestedItem}\n                    </ListGroup.Item>\n                  ))}\n                </ListGroup>\n              )}\n            </ListGroup.Item>\n          );\n        })}\n      </ListGroup>\n    </Card>\n  );\n}\n\nexport default QuestionDisplay;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction AnswerInput(props) {\n  const { t } = useTranslation();\n  return (\n    <Form.Group className=\"answer-inputs mb-3\">\n      <Form.Label htmlFor={`answer-input-${props.id}`}>{`${t(\"Answer\")} ${\n        props.index + 1\n      }`}</Form.Label>\n      <Form.Control\n        type=\"text\"\n        id={`answer-input-${props.id}`}\n        value={props.answer}\n        onChange={props.answerChange}\n      />\n    </Form.Group>\n  );\n}\n\nexport default AnswerInput;\n","import React from \"react\";\nimport Form from \"react-bootstrap/Form\";\nimport { useTranslation } from \"react-i18next\";\n\nfunction QuestionInput(props) {\n  const { t } = useTranslation();\n\n  return (\n    <Form.Group className=\"question-inputs mb-3\">\n      <Form.Label htmlFor={`question-input-${props.id}`}>{`${t(\"Question\")} ${\n        props.index + 1\n      }`}</Form.Label>\n      <Form.Control\n        type=\"text\"\n        id={`question-input-${props.id}`}\n        value={props.question}\n        onChange={props.questionChange}\n      />\n    </Form.Group>\n  );\n}\n\nexport default QuestionInput;\n","import AnswerInput from \"module/Input/Answer\";\nimport QuestionInput from \"module/Input/Question\";\n\nimport React from \"react\";\n\nfunction QuestionAnswerPair(props) {\n  return (\n    <>\n      <QuestionInput\n        index={props.pairIndex}\n        question={props.pair.question}\n        questionChange={props.questionChange}\n      />\n      <AnswerInput\n        index={props.pairIndex}\n        answer={props.pair.answer}\n        answerChange={props.answerChange}\n      />\n    </>\n  );\n}\n\nexport default QuestionAnswerPair;\n","import { exportQAPairs } from \"util/api\";\n\nimport React from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport { useTranslation } from \"react-i18next\";\n\n// Expected props\n// question_sets: [<set>, <set>, ...]\n// set: {\n//    context: <str>\n//    question_pairs: [<pair>, <pair>, ...]\n// }\n// pair: {\n//    question: <str>\n//    options: [<option>, <option>, ...]\n// }\n// option: {\n//   text: <str>\n//   is_answer: <bool>\n// }\n\nfunction ExportButtons(props) {\n  const { t } = useTranslation();\n\n  const download_export = (event, format) => {\n    event.preventDefault();\n\n    const data = props.getQuestionSets();\n    if (!Array.isArray(data) || !data.length) {\n      console.log(\"Exported data is not array or is empty\");\n      return;\n    }\n\n    exportQAPairs(data, format);\n  };\n\n  return (\n    <>\n      <h5>{t(\"Export Options\")}</h5>\n      <hr />\n      <ButtonGroup>\n        <Button\n          variant=\"secondary\"\n          onClick={(event) => download_export(event, \"json\")}\n        >\n          {t(\"JSON\")}\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={(event) => download_export(event, \"txt\")}\n        >\n          {t(\"Plain Text\")}\n        </Button>\n        <Button\n          variant=\"secondary\"\n          onClick={(event) => download_export(event, \"docx\")}\n        >\n          {t(\"Word Document\")}\n        </Button>\n      </ButtonGroup>\n    </>\n  );\n}\n\nexport default ExportButtons;\n","import React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Modal from \"react-bootstrap/Modal\";\nimport { useTranslation } from \"react-i18next\";\nimport { BsCaretLeftFill, BsCaretRightFill } from \"react-icons/bs\";\n\nfunction TutorialModal(props) {\n  const [index, setIndex] = useState(0);\n  const { content } = props;\n  const { t } = useTranslation();\n\n  const handleSelect = (selectedIndex, e) => {\n    setIndex(selectedIndex);\n  };\n\n  return (\n    Boolean(content.length) && (\n      <Modal\n        className=\"tutorial-modal\"\n        show={props.show}\n        size=\"xl\"\n        aria-labelledby=\"contained-modal-title-vcenter\"\n        centered\n      >\n        <Modal.Header closeButton onHide={props.onHide}>\n          <Modal.Title id=\"contained-modal-title-vcenter\">\n            {`${t(\"Step\")} ${index + 1} - ${t(content[index].title)}`}\n          </Modal.Title>\n        </Modal.Header>\n        <Modal.Body>\n          <Carousel\n            activeIndex={index}\n            controls={false}\n            indicators={false}\n            onSelect={handleSelect}\n          >\n            {content.map((content, contentIndex) => (\n              <Carousel.Item key={`tutorial-carousel-${contentIndex}`}>\n                <img\n                  className=\"d-block w-100\"\n                  src={content.image}\n                  alt={content.title}\n                />\n              </Carousel.Item>\n            ))}\n          </Carousel>\n        </Modal.Body>\n        <Modal.Footer>\n          <ButtonGroup\n            className=\"mx-auto\"\n            size=\"lg\"\n            aria-label=\"Tutorial step control\"\n          >\n            <Button\n              variant=\"secondary\"\n              disabled={index === 0}\n              onClick={() => {\n                setIndex(index - 1);\n              }}\n            >\n              <BsCaretLeftFill />\n            </Button>\n            <Button\n              variant=\"secondary\"\n              disabled={index === content.length - 1}\n              onClick={() => {\n                setIndex(index + 1);\n              }}\n            >\n              <BsCaretRightFill />\n            </Button>\n          </ButtonGroup>\n        </Modal.Footer>\n      </Modal>\n    )\n  );\n}\n\nexport default TutorialModal;\n","import step1 from \"img/distractor-tutorial/step1.gif\";\nimport step2 from \"img/distractor-tutorial/step2.gif\";\n\nexport default [\n  {\n    title: \"Paste an Article\",\n    image: step1,\n  },\n  {\n    title: \"Review Results and Export\",\n    image: step2,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/step1.187c5874.gif\";","export default __webpack_public_path__ + \"static/media/step2.45b7d1c3.gif\";","import GenerateButton from \"module/Button/Generate\";\nimport ContextInput from \"module/Input/Context\";\nimport QuestionDisplay from \"module/Question/display\";\nimport QuestionAnswerPair from \"module/QuestionAnswerPair\";\nimport { showTextSlider } from \"util/action\";\nimport { distractorGenerate } from \"util/api\";\n\nimport ExportButtons from \"component/Export\";\nimport TutorialModal from \"component/TutorialModal\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport tutorial from \"./tutorial\";\n\nfunction DistractorAI(props) {\n  const [questionSets, setQuestionSets] = useState([\n    {\n      context: `Humanity needs to \"grow up\" and deal with the issue of climate change, British Prime Minister Boris Johnson told world leaders at the United Nations General Assembly in New York on Wednesday. Johnson, a last-minute addition to the speakers' list that day, slammed the world's inadequate response to the climate crisis and urged humanity to \"listen to the warnings of the scientists,\" pointing to the Covid-19 pandemic as \"an example of gloomy scientists being proved right.\"`,\n      question_pairs: [\n        {\n          question: \"Who is the prime minister of United Kingdom?\",\n          answer: \"Boris Johnson\",\n          options: [],\n        },\n        {\n          question: \"Who is the prime minister of United Kingdom?\",\n          answer: \"Boris Johnson\",\n          options: [],\n        },\n      ],\n    },\n    {\n      context:\n        \"Two real-world studies published Wednesday confirm that the immune protection offered by two doses of Pfizer's Covid-19 vaccine drops off after two months or so, although protection against severe disease, hospitalization and death remains strong.\\n\\nThe studies, from Israel and from Qatar and published in the New England Journal of Medicine, support arguments that even fully vaccinated people need to maintain precautions against infection.\\nOne study from Israel covered 4,800 health care workers a...\",\n      question_pairs: [\n        {\n          question:\n            \"How many doses of Pfizer's Covid-19 vaccine drops off after two months?\",\n          answer: \"Two doses\",\n          options: [],\n        },\n      ],\n    },\n  ]);\n  const [generated, setGenerated] = useState(false);\n  const [generating, setGenerating] = useState(false);\n  const [exportChecks, setExportChecks] = useState([]);\n  const showTutorialModal = useSelector((state) => state.showTextSlider);\n  const { t } = useTranslation();\n  const dispatch = useDispatch();\n\n  const toggleQuestionExportFuncGenerator = (setIndex, pairIndex) => {\n    return (event) => {\n      let newExportChecks = [...exportChecks];\n      newExportChecks[setIndex][pairIndex] = Boolean(\n        newExportChecks[setIndex][pairIndex]\n      )\n        ? false\n        : Array(\n            questionSets[setIndex].question_pairs[pairIndex].options.length + 1\n          ).fill(true);\n      // +1 for the answer\n      setExportChecks(newExportChecks);\n    };\n  };\n\n  const getDistractors = async (event) => {\n    event.preventDefault();\n    setGenerating(true);\n    for (let setIndex = 0; setIndex < questionSets.length; setIndex++) {\n      const questionSet = questionSets[setIndex];\n      for (\n        let pairIndex = 0;\n        pairIndex < questionSet.question_pairs.length;\n        pairIndex++\n      ) {\n        const pair = questionSet.question_pairs[pairIndex];\n        const [result, error] = await distractorGenerate(\n          questionSet.context,\n          pair.answer,\n          0,\n          0,\n          pair.question,\n          3,\n          \"en-US\"\n        );\n\n        if (!error) {\n          pair.options = result.distractors;\n        } else {\n          console.log(error);\n        }\n      }\n    }\n    setExportChecks(\n      questionSets.map((questionSet) => {\n        return questionSet.question_pairs.map((pair) => {\n          return Array(pair.options.length + 1).fill(true);\n        });\n      })\n    );\n    setGenerating(false);\n    setGenerated(true);\n  };\n\n  const emptySet_ = () => {\n    return {\n      context: \"\",\n      question_pairs: [emptyPair_()],\n    };\n  };\n\n  const emptyPair_ = () => {\n    return {\n      question: \"\",\n      answer: \"\",\n      options: [],\n    };\n  };\n\n  const createSet = () => {\n    let newSets = [...questionSets];\n    newSets.push(emptySet_());\n    setQuestionSets(newSets);\n  };\n\n  const deleteSet = (setIndex) => {\n    let newSets = [...questionSets];\n    newSets.splice(setIndex, 1);\n    setQuestionSets(newSets);\n  };\n\n  const createPair = (setIndex) => {\n    let newSets = [...questionSets];\n    newSets[setIndex].question_pairs.push(emptyPair_());\n    setQuestionSets(newSets);\n  };\n\n  const deletePair = (setIndex, pairIndex) => {\n    let newSets = [...questionSets];\n    newSets[setIndex].question_pairs.splice(pairIndex, 1);\n    setQuestionSets(newSets);\n  };\n\n  const contextChange = (index, value) => {\n    let newSets = [...questionSets];\n    newSets[index].context = value;\n    setQuestionSets(newSets);\n  };\n\n  const questionChange = (setIndex, pairIndex, value) => {\n    let newSets = [...questionSets];\n    newSets[setIndex].question_pairs[pairIndex].question = value;\n    setQuestionSets(newSets);\n  };\n\n  const answerChange = (setIndex, pairIndex, value) => {\n    let newSets = [...questionSets];\n    newSets[setIndex].question_pairs[pairIndex].answer = value;\n    setQuestionSets(newSets);\n  };\n\n  const generateDataForExport = () => {\n    let datas = [];\n    questionSets.forEach((questionSet, setIndex) => {\n      let data = { context: questionSet.context, question_pairs: [] };\n      questionSet.question_pairs.forEach((pair, pairIndex) => {\n        if (Boolean(exportChecks[setIndex][pairIndex])) {\n          let options = [{ text: pair.answer, is_answer: true }];\n          pair.options.forEach((option, optionIndex) => {\n            if (Boolean(exportChecks[setIndex][pairIndex][optionIndex])) {\n              options.push({ text: option, is_answer: false });\n            }\n          });\n          data.question_pairs.push({ question: pair.question, options });\n        }\n      });\n      if (Boolean(data.question_pairs.length)) {\n        datas.push(data);\n      }\n    });\n    return datas;\n  };\n\n  return (\n    <Container id=\"distractor-ai\">\n      <h1 className=\"text-center\">Distractor AI</h1>\n      {[...Array(questionSets.length)].map((e, setIndex) => (\n        <div key={setIndex}>\n          <Row>\n            <Container>\n              <Row>\n                <Col xs={6} className=\"p-3\">\n                  <ContextInput\n                    label={`${t(\"Context\")} ${setIndex + 1}`}\n                    context={questionSets[setIndex].context}\n                    onChange={(event) => {\n                      contextChange(setIndex, event.target.value);\n                    }}\n                  />\n                </Col>\n                <Col xs={6} className=\"p-3\">\n                  {questionSets[setIndex].question_pairs.map(\n                    (pair, pairIndex) => (\n                      <Form key={`set-${setIndex}-qa-input-${pairIndex}`}>\n                        <QuestionAnswerPair\n                          pairIndex={pairIndex}\n                          pair={pair}\n                          questionChange={(event) => {\n                            event.preventDefault();\n                            questionChange(\n                              setIndex,\n                              pairIndex,\n                              event.target.value\n                            );\n                          }}\n                          answerChange={(event) => {\n                            event.preventDefault();\n                            answerChange(\n                              setIndex,\n                              pairIndex,\n                              event.target.value\n                            );\n                          }}\n                        />\n                        <Button\n                          variant=\"danger\"\n                          size=\"sm\"\n                          onClick={(event) => {\n                            event.preventDefault();\n                            deletePair(setIndex, pairIndex);\n                          }}\n                        >\n                          Remove this pair\n                        </Button>\n                        <hr />\n                      </Form>\n                    )\n                  )}\n                  <Button\n                    variant=\"success\"\n                    size=\"sm\"\n                    onClick={(event) => {\n                      event.preventDefault();\n                      createPair(setIndex);\n                    }}\n                  >\n                    Add QA Pair\n                  </Button>\n                </Col>\n              </Row>\n              <Row className=\"justify-content-end\">\n                <Button\n                  variant=\"danger\"\n                  size=\"sm\"\n                  onClick={(event) => {\n                    event.preventDefault();\n                    deleteSet(setIndex);\n                  }}\n                >\n                  {t(\"Remove This Set\")}\n                </Button>\n              </Row>\n            </Container>\n          </Row>\n          <hr />\n        </div>\n      ))}\n      <Row>\n        <Button\n          variant=\"success\"\n          className=\"mb-2\"\n          onClick={(event) => {\n            event.preventDefault();\n            createSet();\n          }}\n        >\n          {t(\"Add More Set\")}\n        </Button>\n        <GenerateButton\n          className=\"m-2\"\n          onClick={getDistractors}\n          disabled={generating}\n        />\n      </Row>\n      <hr />\n      {generated && (\n        <div>\n          {questionSets.map((questionSet, setIndex) => {\n            return questionSet.question_pairs.map((pair, pairIndex) => {\n              // Process options for QuestionDisplay\n              let pairChecks = exportChecks[setIndex][pairIndex];\n              let QDoption = [\n                {\n                  text: pair.answer,\n                  type: \"check\",\n                  checkType: \"checkbox\",\n                  textBold: true,\n                  isChecked: pairChecks && pairChecks[0], // Ideally, this should always be true\n                  disabled: !Boolean(pairChecks),\n                },\n              ];\n              pair.options.forEach((option, optionIndex) => {\n                QDoption.push({\n                  text: option,\n                  type: \"check\",\n                  checkType: \"checkbox\",\n                  textBold: false,\n                  // +1 for the answer\n                  isChecked: pairChecks && pairChecks[optionIndex + 1],\n                  disabled: !Boolean(pairChecks),\n                  onCheck: (event) => {\n                    let newExportChecks = [...exportChecks];\n                    newExportChecks[setIndex][pairIndex][optionIndex + 1] =\n                      !newExportChecks[setIndex][pairIndex][optionIndex + 1];\n                    setExportChecks(newExportChecks);\n                  },\n                });\n              });\n\n              return (\n                <QuestionDisplay\n                  key={`question-display-${setIndex}-${pairIndex}`}\n                  listings={QDoption}\n                  preTitle={questionSet.context}\n                  title={pair.question}\n                  titleChecked={Boolean(exportChecks[setIndex][pairIndex])}\n                  titleCheckboxOnChange={toggleQuestionExportFuncGenerator(\n                    setIndex,\n                    pairIndex\n                  )}\n                />\n              );\n            });\n          })}\n          <ExportButtons getQuestionSets={generateDataForExport} />\n        </div>\n      )}\n      <TutorialModal\n        content={tutorial}\n        show={showTutorialModal}\n        onHide={() => dispatch(showTextSlider(false))}\n      />\n    </Container>\n  );\n}\n\nexport default DistractorAI;\n","import \"./index.css\";\n\nimport GenerateButton from \"module/Button/Generate\";\nimport ContextInput from \"module/Input/Context\";\nimport { submitQs } from \"util/action\";\nimport { showToastInfo } from \"util/toast\";\n\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport ButtonGroup from \"react-bootstrap/ButtonGroup\";\nimport Col from \"react-bootstrap/Col\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport { withTranslation } from \"react-i18next\";\nimport { MdHelp, MdLockOpen, MdLockOutline } from \"react-icons/md\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nclass PickAnswer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectWords: [],\n      isEdit: true,\n      inputContext: \"\",\n      language: \"en-US\",\n    };\n    this.showToastInfo = showToastInfo;\n    this.addWords = this.addWords.bind(this);\n    this.triggerQG = this.triggerQG.bind(this);\n  }\n\n  pasteTo() {\n    let self = this;\n    navigator.clipboard\n      .readText()\n      .then(function (text) {\n        console.log(text, this);\n        self.setState({\n          inputContext: text,\n        });\n      })\n      .catch((err) => {\n        console.error(\"Failed to read clipboard contents: \", err);\n      });\n  }\n\n  confirmContext() {\n    let { isEdit, inputContext } = this.state;\n    if (isEdit) {\n      if (\n        inputContext.length <= 0 ||\n        inputContext.replace(/ /g, \"\").length <= 0\n      ) {\n        this.showToastInfo(this.props.t(\"Input can't be null\"), \"error\");\n        return;\n      }\n    }\n    this.setState({\n      isEdit: !isEdit,\n    });\n  }\n\n  cleanSelection() {\n    if (window.getSelection) {\n      if (window.getSelection().empty) {\n        // Chrome\n        window.getSelection().empty();\n      } else if (window.getSelection().removeAllRanges) {\n        // Firefox\n        window.getSelection().removeAllRanges();\n      }\n    } else if (document.selection) {\n      // IE?\n      document.selection.empty();\n    }\n  }\n\n  addWords() {\n    /* 獲取並存下高亮文字 */\n    let selection = window.getSelection();\n    let selectWord = selection.toString();\n\n    var start = selection.anchorOffset;\n    var end = selection.focusOffset - 1;\n    var tmp = 0;\n    if (end < start) {\n      tmp = end;\n      end = start;\n      start = tmp;\n      start++;\n      end--;\n    }\n    // console.log(start, end);\n\n    //取前後內容\n    let contextLimit = 467;\n    let contextForQG = \"\";\n    let { inputContext } = this.state;\n    let padding = 0;\n    if (start <= 233) {\n      contextForQG = inputContext.slice(0, contextLimit);\n    } else {\n      contextForQG = inputContext.slice(\n        parseInt(start - contextLimit / 2),\n        parseInt(start + contextLimit / 2)\n      );\n      // console.log(contextForQG)\n      padding = start - 234;\n      start = start - padding;\n      end = end - padding;\n    }\n\n    // console.log(inputContext.slice(start+padding,end+1+padding))\n    // console.log(contextForQG.slice(start,end+1))\n    // console.log(start, end, padding,contextForQG.length);\n\n    let { selectWords } = this.state;\n\n    //檢查重複\n    let isWordRepeat = false;\n    selectWords.map((word) => {\n      let { start_at, end_at } = word;\n      // console.log(start_at,start,padding)\n      // console.log(end_at,end,padding)\n      if (\n        start_at === start &&\n        end_at === end &&\n        selectWord === word.tag &&\n        padding === word.tag_padding\n      ) {\n        isWordRepeat = true;\n      }\n      return true;\n    });\n\n    if (isWordRepeat) {\n      this.cleanSelection();\n      return;\n    }\n\n    if (selectWord !== \"\" && selectWord.replace(/ /g, \"\").length > 0) {\n      selectWords.push({\n        tag_padding: padding,\n        tag: selectWord,\n        start_at: start,\n        end_at: end,\n        context: contextForQG, //選取的標記附近文章\n      });\n      this.setState({\n        selectWords,\n      });\n    }\n    if (selectWords.length === 1) {\n      this.showToastInfo(this.props.t(\"Click block to cancel select\"));\n    }\n    this.cleanSelection();\n  }\n\n  removeSelect(start, end, tag) {\n    /* remove word by start_at */\n    let { selectWords } = this.state;\n    selectWords = selectWords.filter((word) => {\n      let { start_at, end_at } = word;\n      return !(start_at === start && end_at === end && tag === word.tag);\n    });\n    // console.log(selectWords)\n    this.setState({\n      selectWords,\n    });\n  }\n\n  triggerQG() {\n    if (this.state.selectWords.length > 0) {\n      this.showToastInfo(this.props.t(\"Generating\"));\n      this.props.dispatch(\n        submitQs(\n          this.state.selectWords,\n          this.state.inputContext,\n          this.state.language\n        )\n      );\n    } else {\n      this.showToastInfo(this.props.t(\"No answer is selected\"), \"error\");\n    }\n  }\n\n  render() {\n    let {\n      selectWords,\n      isEdit,\n      inputContext,\n      oneClickDisable = false,\n    } = this.state;\n    let { t } = this.props;\n    let { selectWordsSubmitting } = this.props.appState;\n\n    return (\n      <Container id=\"Pick-Answer\">\n        {/* Context area */}\n        <Row>\n          {isEdit ? (\n            <ContextInput\n              context={inputContext}\n              textCount={true}\n              helpText={t(\"Context-Hint\")}\n              onChange={(event) => {\n                this.setState({\n                  inputContext: event.target.value,\n                });\n              }}\n            />\n          ) : (\n            <>\n              <h3>\n                {t(\"Select some words\")}\n                <span\n                  onClick={() => {\n                    showToastInfo(t(\"Drag to select word\"));\n                  }}\n                  className=\"help-btn\"\n                >\n                  <MdHelp />\n                </span>\n              </h3>\n              <pre\n                className=\"qa-context\"\n                onMouseUp={(event) => this.addWords(event)}\n              >\n                {this.state.inputContext}\n              </pre>\n            </>\n          )}\n\n          {/* Model language buttons */}\n          {/* UNCOMMENT THIS WHEN CHINESE MODELS ARE READY */}\n          {/* <Form.Group className=\"mb-3\">\n            <Form.Label>{t(\"Model-Language\")}</Form.Label>\n            <Col>\n              <ButtonGroup aria-label=\"Model language setting button\">\n                <Button\n                  variant=\"outline-primary\"\n                  active={this.state.language === \"en-US\"}\n                  onClick={() => {\n                    this.setState({ language: \"en-US\" });\n                  }}\n                >\n                  {t(\"Model-enUS\")}\n                </Button>\n                <Button\n                  variant=\"outline-primary\"\n                  active={this.state.language === \"zh-TW\"}\n                  disabled={true}\n                  onClick={() => {\n                    this.setState({ language: \"zh-TW\" });\n                  }}\n                >\n                  {t(\"Model-zhTW\")}\n                </Button>\n              </ButtonGroup>\n            </Col>\n          </Form.Group> */}\n\n          {/* Edit / Confirm Button */}\n          <Button\n            variant={isEdit ? \"success\" : \"secondary\"}\n            onClick={(e) => {\n              if (!isEdit) {\n                if (!oneClickDisable) {\n                  this.showToastInfo(t(\"Double click to confirm\"));\n                }\n                this.setState({\n                  oneClickDisable: true,\n                });\n                setTimeout(() => {\n                  this.setState({\n                    oneClickDisable: false,\n                  });\n                }, 3000);\n              } else {\n                this.confirmContext(e);\n              }\n            }}\n            onDoubleClick={(e) => {\n              this.setState({\n                selectWords: [],\n              });\n              this.confirmContext(e);\n            }}\n          >\n            {isEdit ? (\n              <span>\n                {t(\"Confirm\")} <MdLockOpen />\n              </span>\n            ) : (\n              <span>\n                {t(\"Edit\")} <MdLockOutline />\n              </span>\n            )}\n          </Button>\n        </Row>\n\n        {/* Selected Answer Block */}\n        <Row ref={this.pickedBlock} className=\"mt-3\">\n          {!isEdit && (\n            <>\n              <h4>\n                {t(\"Selected Answer\")}\n                <span\n                  className=\"help-btn\"\n                  onClick={() => {\n                    showToastInfo(t(\"Click block to cancel select\"));\n                  }}\n                >\n                  <MdHelp />\n                </span>\n              </h4>\n\n              {/* Show selected answers with buttons */}\n              <div className=\"my-2\">\n                {selectWords.map((word, k) => {\n                  return (\n                    <Button\n                      variant=\"danger\"\n                      size=\"sm\"\n                      className=\"mx-1\"\n                      key={k}\n                      onClick={(event) =>\n                        this.removeSelect(word.start_at, word.end_at, word.tag)\n                      }\n                    >\n                      {word.tag}\n                    </Button>\n                  );\n                })}\n              </div>\n              <GenerateButton\n                onClick={this.triggerQG}\n                disabled={selectWordsSubmitting}\n              />\n            </>\n          )}\n        </Row>\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { appState: state };\n};\n\nexport default compose(connect(mapStateToProps), withTranslation())(PickAnswer);\n","import GenerateButton from \"module/Button/Generate\";\nimport QuestionDisplay from \"module/Question/display\";\nimport { updateQuestion } from \"util/action\";\nimport { distractorGenerate } from \"util/api\";\nimport { showToastInfo } from \"util/toast\";\n\nimport ExportButtons from \"component/Export\";\nimport React, { Component } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Container from \"react-bootstrap/Container\";\nimport InputGroup from \"react-bootstrap/InputGroup\";\nimport Row from \"react-bootstrap/Row\";\nimport { withTranslation } from \"react-i18next\";\nimport { BsCheck, BsPencilFill } from \"react-icons/bs\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nclass QuestionGenerator extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      editingQuestion: [],\n      distractors: [],\n      exportChecks: [],\n      distractorGenerating: false,\n      apiError: false,\n    };\n    this.generateDistractor = this.generateDistractor.bind(this);\n    this.generateDataForExport = this.generateDataForExport.bind(this);\n    this.toggleEditingQuestion = this.toggleEditingQuestion.bind(this);\n    this.readEditingQuestion = this.readEditingQuestion.bind(this);\n  }\n\n  generateDistractor = async (index, questionIndex) => {\n    this.setState({ distractorGenerating: true });\n    let { selectWords, fullContext } = this.props.appState;\n\n    const [result, error] = await distractorGenerate(\n      fullContext,\n      selectWords[index].tag,\n      selectWords[index].start_at,\n      selectWords[index].end_at,\n      selectWords[index].questions[questionIndex],\n      3,\n      \"en-US\"\n    );\n\n    if (!error) {\n      let newDistractors = [...this.state.distractors];\n      if (!newDistractors[index]) {\n        newDistractors[index] = [];\n      }\n      newDistractors[index][questionIndex] = result.distractors;\n      this.setState({\n        distractorGenerating: false,\n        distractors: newDistractors,\n      });\n    } else {\n      console.log(error);\n    }\n  };\n\n  generateDataForExport = () => {\n    let { fullContext, selectWordsRaw } = this.props.appState;\n    let pairs = [];\n    this.state.exportChecks.forEach((questionsChecked, index) => {\n      questionsChecked.forEach((checked, questionIndex) => {\n        if (\n          checked &&\n          this.state.distractors[index] &&\n          this.state.distractors[index][questionIndex]\n        ) {\n          pairs.push({\n            question: selectWordsRaw[index].questions[questionIndex],\n            options: [\n              { text: selectWordsRaw[index].tag, is_answer: true },\n            ].concat(\n              this.state.distractors[index][questionIndex].map((distractor) => {\n                return { text: distractor, is_answer: false };\n              })\n            ),\n          });\n        }\n      });\n    });\n    if (!pairs.length) {\n      showToastInfo(\"No valid ouput group\");\n      return;\n    }\n    return [\n      {\n        context: fullContext,\n        question_pairs: pairs,\n      },\n    ];\n  };\n\n  toogleExport = (index, questionIndex) => {\n    let newExportChecks = [...this.state.exportChecks];\n    if (!newExportChecks[index]) {\n      newExportChecks[index] = [];\n    }\n    newExportChecks[index][questionIndex] =\n      !newExportChecks[index][questionIndex];\n    this.setState({ exportChecks: newExportChecks });\n  };\n\n  toggleEditingQuestion = (index, questionIndex) => {\n    let newEditingQuestion = [...this.state.editingQuestion];\n    if (!newEditingQuestion[index]) {\n      newEditingQuestion[index] = [];\n    }\n    newEditingQuestion[index][questionIndex] =\n      !newEditingQuestion[index][questionIndex];\n    this.setState({ editingQuestion: newEditingQuestion });\n  };\n\n  readEditingQuestion = (index, questionIndex) => {\n    let { editingQuestion } = this.state;\n    return editingQuestion[index] && editingQuestion[index][questionIndex];\n  };\n\n  render() {\n    let { dispatch } = this.props;\n    let { distractors, distractorGenerating } = this.state;\n    let { selectWords } = this.props.appState;\n\n    return (\n      <Container id=\"QG-Module\">\n        {/* Generated question sets */}\n        <Row>\n          {selectWords.map((word, index) => {\n            // Process options for QuestionDisplay\n            let QDlisting = word.questions.map((question, questionIndex) => {\n              const editing = this.readEditingQuestion(index, questionIndex);\n              return {\n                type: \"input\",\n                text: question,\n                disabled: !editing,\n                inputBeginAddOn: [\n                  <InputGroup.Checkbox\n                    key={`question-display-${index}-${questionIndex}-checkbox`}\n                    disabled={\n                      !Boolean(\n                        !editing &&\n                          distractors[index] &&\n                          distractors[index][questionIndex]\n                      )\n                    }\n                    onClick={() => {\n                      this.toogleExport(index, questionIndex);\n                    }}\n                  />,\n                ],\n                inputEndAddOn: editing\n                  ? [\n                      <Button\n                        key={`question-display-${index}-${questionIndex}-done`}\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                          this.toggleEditingQuestion(index, questionIndex);\n                        }}\n                      >\n                        Done <BsCheck />\n                      </Button>,\n                    ]\n                  : [\n                      <Button\n                        key={`question-display-${index}-${questionIndex}-edit`}\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                          this.toggleEditingQuestion(index, questionIndex);\n                        }}\n                      >\n                        Edit <BsPencilFill />\n                      </Button>,\n                      <GenerateButton\n                        key={`question-display-${index}-${questionIndex}-generate`}\n                        variant=\"outline-secondary\"\n                        onClick={() => {\n                          this.generateDistractor(index, questionIndex);\n                        }}\n                        disabled={distractorGenerating}\n                      />,\n                    ],\n                onChange: (event) => {\n                  selectWords[index].questions[questionIndex] =\n                    event.target.value;\n                  dispatch(updateQuestion(selectWords));\n                },\n                nestedList:\n                  !editing &&\n                  distractors[index] &&\n                  distractors[index][questionIndex],\n              };\n            });\n\n            let context = this.props.appState.pickAnsRaw[index].context;\n            let hightlightedContext = [\n              context.slice(0, word.start_at),\n              <span\n                key={`question-display-${index}-span`}\n                className=\"text-success fw-bolder\"\n              >\n                {word.tag}\n              </span>,\n              context.slice(word.end_at + 1),\n            ];\n\n            return (\n              <div key={`generated-question-${index}`}>\n                <QuestionDisplay\n                  listings={QDlisting}\n                  preTitle={hightlightedContext}\n                  title={`Answer: ${word.tag}`}\n                />\n              </div>\n            );\n          })}\n        </Row>\n\n        {/* Export Buttons */}\n        {Boolean(\n          // Any one of the questions is checked for export\n          this.state.exportChecks.length &&\n            this.state.exportChecks.some((set) =>\n              set.some((questionCheck) => questionCheck)\n            )\n        ) && (\n          <Row>\n            <ExportButtons getQuestionSets={this.generateDataForExport} />\n          </Row>\n        )}\n      </Container>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return { appState: state };\n};\n\nexport default compose(\n  connect(mapStateToProps),\n  withTranslation()\n)(QuestionGenerator);\n","import step1 from \"img/querator-tutorial/step1.gif\";\nimport step2 from \"img/querator-tutorial/step2.gif\";\nimport step3 from \"img/querator-tutorial/step3.gif\";\n\nexport default [\n  {\n    title: \"Paste an Article\",\n    image: step1,\n  },\n  {\n    title: \"Highlight Answers\",\n    image: step2,\n  },\n  {\n    title: \"Review Results and Export\",\n    image: step3,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/step1.00044173.gif\";","export default __webpack_public_path__ + \"static/media/step2.6d988967.gif\";","export default __webpack_public_path__ + \"static/media/step3.55595882.gif\";","import { resetGeneratedContent, showTextSlider } from \"util/action\";\n\nimport PA from \"component/PickAnswer\";\nimport QG from \"component/QuestionGenerator\";\nimport TutorialModal from \"component/TutorialModal\";\nimport React, { useEffect } from \"react\";\nimport Container from \"react-bootstrap/Container\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport tutorial from \"./tutorial\";\n\nconst isMobile = () => {\n  var check = false;\n  (function (a) {\n    if (\n      /(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(\n        a\n      ) ||\n      /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw-(n|u)|c55\\/|capi|ccwa|cdm-|cell|chtm|cldc|cmd-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc-s|devi|dica|dmob|do(c|p)o|ds(12|-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(-|_)|g1 u|g560|gene|gf-5|g-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd-(m|p|t)|hei-|hi(pt|ta)|hp( i|ip)|hs-c|ht(c(-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i-(20|go|ma)|i230|iac( |-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|-[a-w])|libw|lynx|m1-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|-([1-8]|c))|phil|pire|pl(ay|uc)|pn-2|po(ck|rt|se)|prox|psio|pt-g|qa-a|qc(07|12|21|32|60|-[2-7]|i-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h-|oo|p-)|sdk\\/|se(c(-|0|1)|47|mc|nd|ri)|sgh-|shar|sie(-|m)|sk-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h-|v-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl-|tdg-|tel(i|m)|tim-|t-mo|to(pl|sh)|ts(70|m-|m3|m5)|tx-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas-|your|zeto|zte-/i.test(\n        a.substr(0, 4)\n      )\n    )\n      check = true;\n  })(navigator.userAgent || navigator.vendor || window.opera);\n  return check;\n};\n\nfunction QueratorAI(props) {\n  const showTutorialModal = useSelector((state) => state.showTextSlider);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(resetGeneratedContent());\n  });\n\n  return (\n    <Container id=\"querator-ai\">\n      {isMobile() ? (\n        <>\n          <h1 className=\"text-center\">OOPS!</h1>\n          <hr />\n          <p>\n            We do not support mobile devices yet. Please use Desktop or Laptop\n            to get the best experience\n          </p>\n          <p>我們還沒有支援行動裝置，請使用電腦來獲得最佳體驗</p>\n        </>\n      ) : (\n        <>\n          <h1 className=\"text-center\">Querator AI</h1>\n          <PA />\n          <hr />\n          <QG />\n        </>\n      )}\n      <TutorialModal\n        content={tutorial}\n        show={showTutorialModal}\n        onHide={() => dispatch(showTextSlider(false))}\n      />\n    </Container>\n  );\n}\n\nexport default QueratorAI;\n","import step1 from \"img/group-tutorial/step1.gif\";\nimport step2 from \"img/group-tutorial/step2.gif\";\nimport step3 from \"img/group-tutorial/step3.gif\";\n\nexport default [\n  {\n    title: \"Paste an Article\",\n    image: step1,\n  },\n  {\n    title: \"Highlight Answers\",\n    image: step2,\n  },\n  {\n    title: \"Review Results and Export\",\n    image: step3,\n  },\n];\n","export default __webpack_public_path__ + \"static/media/step1.0b516fe3.gif\";","export default __webpack_public_path__ + \"static/media/step2.b1e90134.gif\";","export default __webpack_public_path__ + \"static/media/step3.56db50bc.gif\";","import GenerateButton from \"module/Button/Generate\";\nimport ContextInput from \"module/Input/Context\";\nimport QuestionDisplay from \"module/Question/display\";\nimport { showTextSlider } from \"util/action\";\nimport {\n  questionGroupDistractorGenerate,\n  questionGroupGenerate,\n} from \"util/api\";\n\nimport ExportButtons from \"component/Export\";\nimport TutorialModal from \"component/TutorialModal\";\nimport React, { useState } from \"react\";\nimport Button from \"react-bootstrap/Button\";\nimport Col from \"react-bootstrap/Col\";\nimport Collapse from \"react-bootstrap/Collapse\";\nimport Container from \"react-bootstrap/Container\";\nimport Form from \"react-bootstrap/Form\";\nimport Row from \"react-bootstrap/Row\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nimport tutorial from \"./tutorial\";\n\nfunction getRandomItem(array) {\n  let index = Math.floor(Math.random() * array.length);\n  return array[index];\n}\n\nconst EXAMPLE_CONTEXTS = [\n  \"Harry Potter is a series of seven fantasy novels written by British author J. K. Rowling. The novels chronicle the lives of a young wizard, Harry Potter, and his friends Hermione Granger and Ron Weasley, all of whom are students at Hogwarts School of Witchcraft and Wizardry. The main story arc concerns Harry's struggle against Lord Voldemort, a dark wizard who intends to become immortal, overthrow the wizard governing body known as the Ministry of Magic and subjugate all wizards and Muggles.\",\n  \"Game of Thrones is an American fantasy drama television series created by David Benioff and D. B. Weiss for HBO. It is an adaptation of A Song of Ice and Fire, a series of fantasy novels by George R. R. Martin, the first of which is A Game of Thrones. The show was shot in the United Kingdom, Canada, Croatia, Iceland, Malta, Morocco, and Spain. It premiered on HBO in the United States on April 17, 2011, and concluded on May 19, 2019, with 73 episodes broadcast over eight seasons.\",\n  \"Facebook is an American online social media and social networking service based in Menlo Park, California, and a flagship service of the namesake company Facebook, Inc. It was founded by Mark Zuckerberg, along with fellow Harvard College students and roommates Eduardo Saverin, Andrew McCollum, Dustin Moskovitz, and Chris Hughes. The founders of Facebook initially limited membership to Harvard students. Membership was expanded to Columbia, Stanford, and Yale before being expanded to the rest of the Ivy League, MIT, NYU, Boston University, then various other universities in the United States and Canada, and lastly high school students. Since 2006, anyone who claims to be at least 13 years old has been allowed to become a registered user of Facebook, though this may vary depending on local laws. The name comes from the face book directories often given to American university students.\",\n];\n\nfunction QueratorGroupAI(props) {\n  const [settingOpen, setSettingOpen] = useState(false);\n  const [questionNum, setQuestionNum] = useState(5);\n  const [context, setContext] = useState(getRandomItem(EXAMPLE_CONTEXTS));\n  const [disableGenBtn, setDisableGenBtn] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [answers, setAnswers] = useState([]);\n  const [options, setOptions] = useState([]);\n  const [exportChecks, setExportChecks] = useState([]);\n  const showTutorialModal = useSelector((state) => state.showTextSlider);\n  const dispatch = useDispatch();\n\n  const toggleQuestionExportFuncGenerator = (questionIndex) => {\n    return (event) => {\n      let newExportChecks = [...exportChecks];\n      newExportChecks[questionIndex] = Boolean(newExportChecks[questionIndex])\n        ? false\n        : Array(options[questionIndex].length + 1).fill(true);\n      // +1 for the answer\n      setExportChecks(newExportChecks);\n    };\n  };\n\n  let genQuestionGroup = async (\n    context,\n    questionGroupSize,\n    candidatePoolSize\n  ) => {\n    setAnswers(Array(questionNum).fill(\"\")); // reset\n    setDisableGenBtn(true);\n\n    const [result, error] = await questionGroupGenerate(\n      context,\n      questionGroupSize,\n      candidatePoolSize,\n      \"en-US\"\n    );\n\n    if (!error) {\n      setQuestions(result.question_group);\n    } else {\n      console.log(error);\n    }\n    setDisableGenBtn(false);\n  };\n\n  let genOptions = async () => {\n    // combine question and answer\n    let allAnsIsNull = true;\n    let questionAndAnswers = questions.map((question, i) => {\n      let answer = answers[i] || \"\";\n      if (answer !== \"\") {\n        allAnsIsNull = false;\n      }\n      return { question, answer };\n    });\n\n    if (allAnsIsNull) {\n      alert(\"Please provide answers for distractor generation.\");\n      return;\n    }\n\n    setDisableGenBtn(true);\n\n    const [result, error] = await questionGroupDistractorGenerate(\n      context,\n      questionAndAnswers,\n      \"en-US\"\n    );\n\n    if (!error) {\n      let question_answer_and_options = questionAndAnswers.map((qa) => {\n        // get distractor\n        let distractor = undefined;\n        result.distractors.forEach((d) => {\n          if (d.question === qa.question) {\n            distractor = d;\n          }\n        });\n        // merge with qa\n        qa.options = distractor.options || [];\n        return qa;\n      });\n      // change state\n      let newOptionValue = [...options];\n      question_answer_and_options.forEach((qac, i) => {\n        newOptionValue[i] = qac.options;\n      });\n      setOptions(newOptionValue);\n    } else {\n      console.log(error);\n    }\n\n    setDisableGenBtn(false);\n  };\n\n  let generateSetsForExport = () => {\n    let data = [{ context, question_pairs: [] }];\n    for (\n      let questionIndex = 0;\n      questionIndex < questions.length;\n      questionIndex++\n    ) {\n      const question = questions[questionIndex];\n      if (!exportChecks[questionIndex]) {\n        continue;\n      }\n      let exportOptions = [{ text: answers[questionIndex], is_answer: true }];\n      for (\n        let optionIndex = 0;\n        optionIndex < options[questionIndex].length;\n        optionIndex++\n      ) {\n        // first option is answer, +1 for actual option\n        if (!exportChecks[questionIndex][optionIndex + 1]) {\n          continue;\n        }\n        const option = options[questionIndex][optionIndex];\n        exportOptions.push({ text: option, is_answer: false });\n      }\n      data[0].question_pairs.push({ question, options: exportOptions });\n    }\n    return data;\n  };\n\n  return (\n    <Container id=\"querator-group-ai\">\n      <h1 className=\"text-center mb-3\">Querator Group AI</h1>\n      <ContextInput\n        label=\"Context\"\n        context={context}\n        onChange={(event) => {\n          setContext(event.target.value);\n        }}\n      />\n\n      <Button\n        variant=\"light\"\n        size=\"sm\"\n        className=\"my-3 w-100\"\n        onClick={() => setSettingOpen(!settingOpen)}\n        aria-expanded={settingOpen}\n      >\n        Generation Setting\n      </Button>\n      <Collapse in={settingOpen}>\n        <Form.Group as={Row} className=\"mb-3\">\n          <Form.Label column>Question Group Size</Form.Label>\n          <Col>\n            <Form.Control\n              type=\"number\"\n              onChange={(event) => {\n                setQuestionNum(event.target.value);\n                if (event.target.value > 10) {\n                  setTimeout(() => {\n                    setQuestionNum(10);\n                  }, 200);\n                }\n              }}\n              value={questionNum}\n            />\n          </Col>\n        </Form.Group>\n      </Collapse>\n\n      <Row>\n        <GenerateButton\n          onClick={() =>\n            genQuestionGroup(context, questionNum, questionNum * 2)\n          }\n          disabled={disableGenBtn}\n        />\n      </Row>\n\n      <hr />\n\n      <Row>\n        <Col>\n          {questions.map((question, questionIndex) => {\n            // Process options for QuestionDisplay\n            let QDoptions = questions.map((question, questionIndex) => {\n              let questionChecks = exportChecks[questionIndex];\n              let QDoption = [\n                {\n                  text: answers[questionIndex],\n                  type: \"input\",\n                  inputLabel: \"Answer\",\n                  onChange: (event) => {\n                    let newAnswers = [...answers];\n                    newAnswers[questionIndex] = event.target.value;\n                    setAnswers(newAnswers);\n                  },\n                },\n              ];\n              if (options[questionIndex]) {\n                options[questionIndex].forEach((option, optionIndex) => {\n                  QDoption.push({\n                    text: option,\n                    type: \"check\",\n                    checkType: \"checkbox\",\n                    textBold: false,\n                    // +1 for the answer\n                    isChecked:\n                      questionChecks && questionChecks[optionIndex + 1],\n                    disabled: !Boolean(questionChecks),\n                    onCheck: (event) => {\n                      let newExportChecks = [...exportChecks];\n                      newExportChecks[questionIndex][optionIndex + 1] =\n                        !newExportChecks[questionIndex][optionIndex + 1];\n                      setExportChecks(newExportChecks);\n                    },\n                  });\n                });\n              }\n              return QDoption;\n            });\n\n            return (\n              <QuestionDisplay\n                key={`question-display-${questionIndex}`}\n                listings={QDoptions[questionIndex]}\n                title={question}\n                titleChecked={Boolean(exportChecks[questionIndex])}\n                titleCheckboxOnChange={\n                  Boolean(options.length) &&\n                  toggleQuestionExportFuncGenerator(questionIndex)\n                }\n              />\n            );\n          })}\n        </Col>\n      </Row>\n      {Boolean(questions.length) && (\n        <Row>\n          <GenerateButton onClick={genOptions} disabled={disableGenBtn} />\n        </Row>\n      )}\n      {Boolean(options.length) && (\n        <Row>\n          <ExportButtons getQuestionSets={generateSetsForExport} />\n        </Row>\n      )}\n      <TutorialModal\n        content={tutorial}\n        show={showTutorialModal}\n        onHide={() => dispatch(showTextSlider(false))}\n      />\n    </Container>\n  );\n}\n\nexport default QueratorGroupAI;\n","import \"./App.css\";\n\nimport { settingLanguage, showTextSlider } from \"util/action\";\n\nimport Footer from \"component/Footer\";\nimport ModeNavBar from \"component/ModeNavBar\";\nimport AppSetting from \"component/SettingModal\";\nimport DistractorAI from \"page/DistractorAI\";\nimport QueratorAI from \"page/QueratorAI\";\nimport QueratorGroupAI from \"page/QueratorGroupAI\";\nimport React, { useEffect, useRef } from \"react\";\nimport { useTranslation } from \"react-i18next\";\nimport { useDispatch } from \"react-redux\";\nimport { HashRouter, Navigate, Route, Routes } from \"react-router-dom\";\nimport { ToastContainer } from \"react-toastify\";\n\nconst routes = [\n  {\n    path: \"/\",\n    name: \"Querator AI\",\n    element: <QueratorAI />,\n  },\n  {\n    path: \"/group-mode\",\n    name: \"Querator Group AI\",\n    element: <QueratorGroupAI />,\n  },\n  {\n    path: \"distractor-mode\",\n    name: \"Distractor AI\",\n    element: <DistractorAI />,\n  },\n  {\n    path: \"*\",\n    element: <Navigate to=\"/\" />,\n  },\n];\n\nfunction App(props) {\n  const { i18n } = useTranslation();\n  const dispatch = useDispatch();\n\n  const mounted = useRef();\n  useEffect(() => {\n    if (mounted.current === false) {\n      mounted.current = true;\n      const language = window.localStorage.i18nextLng || i18n.language;\n      i18n.changeLanguage(language);\n      dispatch(settingLanguage(language));\n      let isShowTextSlider = window.localStorage.getItem(\n        \"already_see_text_slider\"\n      );\n      if (!isShowTextSlider) {\n        dispatch(showTextSlider(true));\n      }\n    }\n  });\n\n  return (\n    <HashRouter>\n      <ModeNavBar routes={routes} />\n      <main id=\"QG-App\" className=\"flex-shrink-0 mb-5\">\n        <ToastContainer\n          position=\"bottom-center\"\n          autoClose={2000}\n          hideProgressBar\n          newestOnTop={false}\n          closeOnClick\n          rtl={false}\n          pauseOnVisibilityChange\n          draggable\n          pauseOnHover\n        />\n\n        <div className=\"App container\">\n          <AppSetting />\n          <br />\n          <Routes>\n            {routes.map((route, index) => (\n              <Route key={index} path={route.path} element={route.element} />\n            ))}\n          </Routes>\n        </div>\n      </main>\n      <Footer />\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\");\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\");\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf(\"javascript\") === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        \"No internet connection found. App is running in offline mode.\"\n      );\n    });\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"util/i18n\";\n\nimport \"./index.css\";\n\nimport AppRecuder from \"util/reducer\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { applyMiddleware, createStore } from \"redux\";\nimport logger from \"redux-logger\";\nimport thunk from \"redux-thunk\";\n\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nlet store = createStore(AppRecuder, applyMiddleware(thunk, logger));\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}